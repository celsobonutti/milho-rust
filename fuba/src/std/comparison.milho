(defn neq ( x +rest )
  (not (eval (append-list '(= x) rest)))
)

(defn when
  ( condition +rest )
  (if condition
    (cons do rest)
    Nil
  )
)

(defn test (name expected result)
	(if (= expected result)
		(println "PASS:" name)
		(do
			(println "FAIL:" name)
			(println "  └─ Value {" (str result) "} doesn't equal expected result {" (str expected) "}."))))
