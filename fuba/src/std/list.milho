(defn prepend-tail [ atom list ]
  ( let 
    [ head (car list) tail (cdr list) ]
    (cons head (cons atom tail))
  )
)

(defn append-list [ list1 list2 ]
  ( let 
    [ hd (car list1) tl (cdr list1) ]
    ( if (= hd Nil)
      list2
      (cons hd (append-list tl list2))
    )
  )
)

(defn list [ +rest ]
  rest
)
